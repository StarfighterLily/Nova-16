; Generated by Astrid 2.0 Simple Stack-Centric Compiler
; Architecture: Nova-16 with absolute addressing
; Optimized for stack-first operations with built-in support

add_three:
    PUSH FP                       ; Save caller's frame pointer
    MOV FP, SP                    ; Set up new frame pointer
    MOV P7, FP                    ; Copy FP to temp register
    ADD P7, 4               ; Add parameter offset
    MOV R0, [P7]        ; Load parameter v0
    MOV P0, R0             ; Convert to 16-bit
    MOV P7, FP                    ; Copy FP to temp register
    ADD P7, 6               ; Add parameter offset
    MOV R1, [P7]        ; Load parameter v1
    MOV P1, R1             ; Convert to 16-bit
    ADD P0, P1             ; ADD v1
    MOV [0xF000], P0     ; Store 16-bit result temporarily
    MOV R0, [0xF000]     ; Load back low byte
    MOV [0xFFE0], R0     ; Store to v3
    MOV R0, [0xFFE0]     ; Load v3
    MOV P0, R0             ; Convert to 16-bit
    MOV P7, FP                    ; Copy FP to temp register
    ADD P7, 8               ; Add parameter offset
    MOV R1, [P7]        ; Load parameter v2
    MOV P1, R1             ; Convert to 16-bit
    ADD P0, P1             ; ADD v2
    MOV [0xEFFE], P0     ; Store 16-bit result temporarily
    MOV R0, [0xEFFE]     ; Load back low byte
    MOV [0xFFDE], R0     ; Store to v5
    MOV R0, [0xFFDE]     ; Load v5

multiply_and_add:
    PUSH FP                       ; Save caller's frame pointer
    MOV FP, SP                    ; Set up new frame pointer
    MOV P7, FP                    ; Copy FP to temp register
    ADD P7, 4               ; Add parameter offset
    MOV R0, [P7]        ; Load parameter v6
    MOV P0, R0             ; Convert to 16-bit
    MOV P7, FP                    ; Copy FP to temp register
    ADD P7, 6               ; Add parameter offset
    MOV R1, [P7]        ; Load parameter v7
    MOV P1, R1             ; Convert to 16-bit
    MUL P0, P1             ; MUL v7
    MOV [0xEFFC], P0     ; Store 16-bit result temporarily
    MOV R0, [0xEFFC]     ; Load back low byte
    MOV [0xFFE0], R0     ; Store to v9
    MOV R0, [0xFFE0]     ; Load v9
    MOV P0, R0             ; Convert to 16-bit
    MOV P7, FP                    ; Copy FP to temp register
    ADD P7, 8               ; Add parameter offset
    MOV R1, [P7]        ; Load parameter v8
    MOV P1, R1             ; Convert to 16-bit
    ADD P0, P1             ; ADD v8
    MOV [0xEFFA], P0     ; Store 16-bit result temporarily
    MOV R0, [0xEFFA]     ; Load back low byte
    MOV [0xFFDE], R0     ; Store to v11
    MOV R0, [0xFFDE]     ; Load v11

main:
    MOV R0, 5             ; Load constant 5
    MOV [0xFFE0], R0     ; Store to v13
    MOV R0, 10             ; Load constant 10
    MOV [0xFFDE], R0     ; Store to v14
    MOV R0, 15             ; Load constant 15
    MOV [0xFFDC], R0     ; Store to v15
    MOV R0, [0xFFDC]     ; Load v15
    PUSH R0                       ; Push parameter v15
    MOV R0, [0xFFDE]     ; Load v14
    PUSH R0                       ; Push parameter v14
    MOV R0, [0xFFE0]     ; Load v13
    PUSH R0                       ; Push parameter v13
    CALL add_three               ; Call function add_three
    ADD SP, 6         ; Clean up 3 parameters
    MOV [0xFFDA], R0     ; Store to v16
    MOV R0, 3             ; Load constant 3
    MOV [0xFFD8], R0     ; Store to v18
    MOV R0, 4             ; Load constant 4
    MOV [0xFFD6], R0     ; Store to v19
    MOV R0, 5             ; Load constant 5
    MOV [0xFFD4], R0     ; Store to v20
    MOV R0, [0xFFD4]     ; Load v20
    PUSH R0                       ; Push parameter v20
    MOV R0, [0xFFD6]     ; Load v19
    PUSH R0                       ; Push parameter v19
    MOV R0, [0xFFD8]     ; Load v18
    PUSH R0                       ; Push parameter v18
    CALL multiply_and_add               ; Call function multiply_and_add
    ADD SP, 6         ; Clean up 3 parameters
    MOV [0xFFD2], R0     ; Store to v21
    MOV R0, 10             ; Load constant 10
    MOV [0xFFD0], R0     ; Store to v23
    MOV R0, [0xFFD0]     ; Load v23
    PUSH R0                       ; Push parameter v23
    MOV R0, [0xFFD2]     ; Load v21
    PUSH R0                       ; Push parameter v21
    MOV R0, [0xFFDA]     ; Load v16
    PUSH R0                       ; Push parameter v16
    CALL add_three               ; Call function add_three
    ADD SP, 6         ; Clean up 3 parameters
    MOV [0xFFCE], R0     ; Store to v24
    HLT                           ; Halt system
