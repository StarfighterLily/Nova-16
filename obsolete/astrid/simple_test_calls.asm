; Generated by Astrid Pure Stack-Centric Compiler
; Architecture: Nova-16 with pure stack-first approach
; Variables stored on stack, minimal register usage
; Stack Layout: [locals][FP][return_addr][params]

main:
    MOV SP, 0xF000                ; Initialize stack pointer to safe area
    MOV FP, SP                    ; Initialize frame pointer for main
    SUB SP, 8      ; Allocate 8 bytes for locals
    CALL func1          ; Call function
    MOV [FP-4], R0      ; Direct indexed access
    CALL func2          ; Call function
    MOV [FP-6], R0      ; Direct indexed access
    CALL func3          ; Call function
    MOV [FP-8], R0      ; Direct indexed access
    ; Halt processor
    MOV SP, FP                    ; Restore stack pointer
    HLT                           ; Halt system

func1:
    PUSH FP                       ; Save caller's frame pointer
    MOV FP, SP                    ; Set new frame pointer
    SUB SP, 10      ; Allocate 10 bytes for locals
    MOV R0, 1         ; Load constant 1
    MOV [FP-4], R0      ; Direct indexed access
    MOV VL, 1         ; Set active layer
    MOV [FP-6], R0      ; Direct indexed access
    MOV R0, 10         ; Load constant 10
    MOV [FP-8], R0      ; Direct indexed access
    MOV VX, 10             ; Set X coordinate
    MOV VY, 10             ; Set Y coordinate
    MOV R0, 1         ; Load color constant
    MOV VM, 0                     ; Set coordinate mode
    SWRITE R0                     ; Write pixel
    MOV [FP-10], R0      ; Direct indexed access
    ; Implicit return for void function
    MOV SP, FP                    ; Restore stack pointer
    POP FP                        ; Restore caller's frame pointer
    RET                           ; Return to caller

func2:
    PUSH FP                       ; Save caller's frame pointer
    MOV FP, SP                    ; Set new frame pointer
    SUB SP, 10      ; Allocate 10 bytes for locals
    MOV R0, 2         ; Load constant 2
    MOV [FP-6], R0      ; Direct indexed access
    MOV VL, 2         ; Set active layer
    MOV [FP-8], R0      ; Direct indexed access
    MOV R0, 20         ; Load constant 20
    MOV [FP-10], R0      ; Direct indexed access
    MOV VX, 20             ; Set X coordinate
    MOV VY, 20             ; Set Y coordinate
    MOV R0, 2         ; Load color constant
    MOV VM, 0                     ; Set coordinate mode
    SWRITE R0                     ; Write pixel
    MOV [FP-4], R0      ; Direct indexed access
    ; Implicit return for void function
    MOV SP, FP                    ; Restore stack pointer
    POP FP                        ; Restore caller's frame pointer
    RET                           ; Return to caller

func3:
    PUSH FP                       ; Save caller's frame pointer
    MOV FP, SP                    ; Set new frame pointer
    SUB SP, 10      ; Allocate 10 bytes for locals
    MOV R0, 3         ; Load constant 3
    MOV [FP-4], R0      ; Direct indexed access
    MOV VL, 3         ; Set active layer
    MOV [FP-6], R0      ; Direct indexed access
    MOV R0, 30         ; Load constant 30
    MOV [FP-8], R0      ; Direct indexed access
    MOV VX, 30             ; Set X coordinate
    MOV VY, 30             ; Set Y coordinate
    MOV R0, 3         ; Load color constant
    MOV VM, 0                     ; Set coordinate mode
    SWRITE R0                     ; Write pixel
    MOV [FP-10], R0      ; Direct indexed access
    ; Implicit return for void function
    MOV SP, FP                    ; Restore stack pointer
    POP FP                        ; Restore caller's frame pointer
    RET                           ; Return to caller
